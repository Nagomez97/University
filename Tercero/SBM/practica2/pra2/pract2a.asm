;******************************************************************************* 
; CALCULA LA CODIFICACION HAMMING EDAC
;*******************************************************************************

; DEFINICION DEL SEGMENTO DE DATOS 

DATOS SEGMENT 

   	ASCII  DB 	6 DUP (0) ; EL MAXIMO NUMERO PUEDE TENER 5 CIFRAS

DATOS ENDS 


; DEFINICION DEL SEGMENTO DE PILA 

PILA SEGMENT STACK "STACK" 
    DB   40H DUP (0) 
PILA ENDS 


; DEFINICION DEL SEGMENTO EXTRA 

EXTRA     SEGMENT  

	NUMERO  DW	1 DUP (?)	
	
EXTRA ENDS 


; DEFINICION DEL SEGMENTO DE CODIGO 

CODE    SEGMENT 
    ASSUME CS:CODE, DS:DATOS, ES: EXTRA, SS:PILA 

; COMIENZO DEL PROCEDIMIENTO PRINCIPAL 

START PROC 
    ;INICIALIZA LOS REGISTROS DE SEGMENTO CON SUS VALORES 
    MOV AX, DATOS 
    MOV DS, AX 

    MOV AX, PILA 
    MOV SS, AX 

    MOV AX, EXTRA 
    MOV ES, AX 

    ; CARGA EL PUNTERO DE PILA CON EL VALOR MAS ALTO 
    MOV SP, 64 

    ; FIN DE LAS INICIALIZACIONES 

    ;COMIENZO DEL PROGRAMA 

    MOV BX, 1234
  	MOV NUMERO, BX  ; CARGAMOS EL NUMERO EN EL SEGMENTO EXTRA

    CALL printASCII ; CALCULAMOS LA MULTIPLICACION

    ; IMPRESION POR PANTALLA
    ; DX:AX CONTIENE SEGMENTO Y OFFSET
    
    PUSH DS ; GUARDAMO DS EN LA PILA PARA SOBREESCRIBIRLO
    ; HACEMOS ESTO PORQUE LA INTERRUPCION 9H LEE LOS DATOS DESDE DS:DX

    MOV DS, DX ; CARGAMOS EL SEGMENTO EN DS
    MOV DX, AX ; CARGAMOS EN DX EL OFFSET DE LOS DATOS A IMPRIMIR

    MOV AH, 9 ; LLAMAMOS A LA INTERRUPCION DE IMPRESION
    INT 21H

    POP AX
    MOV DS, AX

    ; FIN DEL PROGRAMA 
    MOV AX, 4C00H 
    INT 21H 

START ENDP 
;_______________________________________________________________ 
; SUBRUTINA PARA CONVERTIR UN DECIMAL A ASCII
; ENTRADA BX -> NUMERO A CONVERTIR
; SALIDA DX:AX -> RESULTADO (POSICION DE MEMORIA)
;_______________________________________________________________ 

printASCII PROC NEAR 

  MOV AX, NUMERO ; CARGAMOS EL NUMERO EN AX PARA DIVIDIRLO
  MOV DX, 0
  MOV CX, 5

DIVISION:
  DEC CX
  MOV BX, 10
  MOV DX, 0
  DIV BX ; DIVIDIMOS AX ENTRE 10 PARA IR SACANDO EL MODULO DE CADA DIGITO  
  ; AX CONTIENE EL COCIENTE Y DX CONTIENE EL RESTO
  ADD DX, 030H ; SUMAMOS AL DIGITO 30H PARA OBTENER SU ASCII
  MOV BX, CX
  MOV ASCII[BX], DL ; CARGAMOS LOS DIGITOS DE ATRAS HACIA DELANTE
  CMP AX, 0 ; CUANDO EL COCIENTE SEA 0, HABREMOS TERMINADO
  JNZ DIVISION

  MOV BX, 5
  MOV ASCII[BX], "$" ; COLOCAMOS UN SIMBOLO DE FIN DE CADENA AL FINAL

  MOV DX, SEG ASCII ; GURADAMOS EL SEGMENTO
  MOV AX, OFFSET ASCII ; GUARDAMOS EL OFFSET
  ADD AX, CX


  RET 
printASCII ENDP 

; FIN DEL SEGMENTO DE CODIGO 
CODE ENDS 
; FIN DEL PROGRAMA INDICANDO DONDE COMIENZA LA EJECUCION 
END START 