2.1 El resultado es correcto en par2, ya que es igual que el obtenido en el procesamiento en serie (que es el correcto). Esto se debe a que par1 emplea la variable sum de forma compartida entre los threads del bucle, por lo que se dan situaciones en la que dos threads cogen el mismo valor inicial de sum, y lo operan sobre el mismo sum, por lo que a la hora de escribir, uno de ellos va a sobreescribir el resultado del anterior. Nos encontramos ante un fallo del tipo WAW (Write After Write).

2.2 Los resultados obtenidos con los ficheros originales no eran exactamente iguales entre los programas en serie y en paralelo(2). Esto se debía a que los datos los tratábamos con precisión float, y al cambiar el orden de cálculo mediante threading, aunque debería dar el mismo resultado, se truncaba de distinta forma. Por ello cambiamos el tipo de la variable sum para que almacenase doubles, evitando así los problemas derivados del truncamiento.
